name: "Deploy a container image to Kubernetes"

on:
  workflow_call:
    inputs:
      imageTag:
        description: "Tag of the docker image to deploy."
        required: true
        type: string
      serviceName:
        description: "Name of service being deployed."
        required: true
        type: string
      imageName:
        description: "Name of the docker image to deploy. If not provided, will be the same as 'serviceName'."
        required: false
        type: string
      environment:
        description: "Environment to deploy to (dev | stage | prod)."
        required: false
        type: string
        default: 'dev'
      dockerRegistry:
        description: "Docker registry to push the image to. Default is ghcr.io."
        required: false
        type: string
        default: "ghcr.io"
      actionsRepoRef:
        description: "Run actions from this ref. Default is master."
        type: string
        required: false
        default: "master"

env:
  IMAGE_NAME: ${{ inputs.imageName || inputs.serviceName }}

jobs:
  prepare-and-validate:
    name: "Load and protect environment before jobs"
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.load-environment.outputs.environment }}
      runnerName: ${{ steps.load-environment.outputs.runnerName }}
    steps:
      - name: Checkout calling repo
        uses: actions/checkout@v4

      - name: Checkout trakx/github-actions repo
        uses: actions/checkout@v4
        with:
          repository: trakx/github-actions
          path: ./github-actions-shared-deploy-image
          ref: ${{ inputs.actionsRepoRef }}

      - name: "Detect Environment and Runner"
        shell: bash
        id: load-environment
        run: |
          if [[ "${{ inputs.environment }}" == "prod" ]]; then
              DETECTED_ENVIRONMENT="production"
              RUNNER_NAME="prod-trakx-runner"
          elif [[ "${{ inputs.environment }}" == "stage" ]]; then
              DETECTED_ENVIRONMENT="staging"
              RUNNER_NAME="stage-trakx-runner"
          else
              DETECTED_ENVIRONMENT="development"
              RUNNER_NAME="dev-trakx-runner"
          fi
          
          echo "Detected Environment is: $DETECTED_ENVIRONMENT"
          echo "Detected Runner is: $RUNNER_NAME"
          
          echo "environment=$DETECTED_ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "runnerName=$RUNNER_NAME" >> $GITHUB_OUTPUT

      - name: Outputs if this is a workflow_dispatch for production (manual deploy)
        shell: bash
        id: check-manual-deploy
        run: |
          IS_MANUAL_DEPLOY_RESTRICTED="N"
          if [[ "${{ steps.load-environment.outputs.environment }}" == "production" ]]; then
            if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
              echo "Event workflow_dispatch detected for environment ${{ steps.load-environment.outputs.environment }}."
              IS_MANUAL_DEPLOY_RESTRICTED="Y"
            fi
          fi
          echo "isManualDeployRestricted=$IS_MANUAL_DEPLOY_RESTRICTED" >> $GITHUB_OUTPUT

      - name: Waiting for Approval when deploying to production
        uses: ./github-actions-shared-deploy-image/manual-approval
        if: ${{ steps.check-manual-deploy.outputs.isManualDeployRestricted == 'Y' }}
        with:
          approvers: "deploy-approvers"
          minimumApprovals: 1
          issueTitle: "Manual deploy to ${{ steps.load-environment.outputs.environment }}"
          issuerCanApprove: true
          userReaderAppId: ${{ secrets.TRAKX_USER_READER_APP_ID }}
          userReaderAppPrivateKey: ${{ secrets.TRAKX_USER_READER_APP_PRIVATE_KEY }}

  deploy-kubernetes:
    name: "Deploy image to Kubernetes"
    needs: [ prepare-and-validate ]
    runs-on: ${{ needs.prepare-and-validate.outputs.runnerName }}
    steps:
      - name: Checkout calling repo
        uses: actions/checkout@v4

      - name: Checkout trakx/github-actions repo
        uses: actions/checkout@v4
        with:
          repository: trakx/github-actions
          path: ./github-actions-shared-deploy-image
          ref: ${{ inputs.actionsRepoRef }}

      - name: Deploy container image to Kubernetes
        id: deploy-container-k8s
        uses: ./github-actions-shared-deploy-image/deploy-docker-image
        with:
          serviceName: ${{ inputs.serviceName }}
          containerImage: "${{ inputs.dockerRegistry }}/$GITHUB_REPOSITORY/${{ env.IMAGE_NAME }}"
          tag: ${{ inputs.imageTag }}
          environment: ${{ needs.prepare-and-validate.outputs.environment }}
          actionsRepoRef: ${{ inputs.actionsRepoRef }}
